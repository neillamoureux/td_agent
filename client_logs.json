{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"525a4a01-583a-4f58-9edb-31c099d7d91a","class":"No matching group specified --user_data.rb:375","message":"No matching group specified","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"42","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"block (2 levels) in singleton class","source":{"40":"        raise('Params found in context slot during AppLog call.  Use AppLog.<level>(nil, <params>) instead.') if Matching.env == :development && context.is_a?(Hash)\n","41":"\n","42":"        self.log(logger_level,\n","43":"                 context.to_s,\n","44":"                 block ? block.call : nil,\n"}},{"number":"375","file":"[PROJECT_ROOT]/models/user_data.rb","method":"initialize_matching_group","source":{"373":"                                raise RequestAborted\n","374":"                              else\n","375":"                                AppLog.error('No matching group specified', site_id: Request.current_site.id,\n","376":"                                                                            path: Request.params[:path].split(/\\?/).first,\n","377":"                                                                            user: user)\n"}},{"number":"227","file":"[PROJECT_ROOT]/models/user_data.rb","method":"build_session_data","source":{"225":"    session_data[:meta_info] = build_session_meta_info(saved_meta)\n","226":"\n","227":"    initialize_matching_group(session_data, saved_meta)\n","228":"    initialize_session_stage(session_data)\n","229":"\n"}},{"number":"311","file":"[PROJECT_ROOT]/models/user_data.rb","method":"new_session","source":{"309":"  # If saved_meta is present it creates a returning user, otherwise it creates a new user.\n","310":"  def self.new_session(uuid, saved_meta)\n","311":"    session_data = build_session_data(uuid, saved_meta)\n","312":"\n","313":"    session = UserData.new(session_data)\n"}},{"number":"41","file":"[PROJECT_ROOT]/models/session_strategy.rb","method":"resolve_session","source":{"39":"      existing_matching_group = [user[\"matching_group\"].to_s] if user && user[\"matching_group\"]\n","40":"      Request.params[:matching_group] ||= existing_matching_group if user && Request.current_site[:site_assigns_groups]\n","41":"      UserData.new_session(uuid, meta)\n","42":"    else\n","43":"      user_data = get_user_data(user)\n"}},{"number":"195","file":"[PROJECT_ROOT]/models/user_data.rb","method":"update_user","source":{"193":"    end\n","194":"\n","195":"    user = session_strategy.resolve_session(uuid, user, meta, USER_DATA_EXPIRATION.seconds.ago)\n","196":"\n","197":"    if predictions_disabled\n"}},{"number":"16","file":"[PROJECT_ROOT]/controllers/base_controller.rb","method":"set_current_user","source":{"14":"    return unless Request.lock_acquired?\n","15":"\n","16":"    user_data = UserData.update_user(params[:uuid], data, meta)\n","17":"\n","18":"    if data && data['broken_session']\n"}},{"number":"40","file":"[PROJECT_ROOT]/controllers/match.rb","method":"initialize","source":{"38":"      Utils.monitor_latency(C::MATCH_PARAMS_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_PARAMS_LOAD, Request.current_child_site.id))\n","39":"\n","40":"      set_current_user(Request.params)\n","41":"      Utils.monitor_latency(C::MATCH_USER_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_USER_LOAD, Request.current_child_site.id))\n","42":"\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"new","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/match","component":null,"action":null,"params":{"flags":null,"site_id":1480,"child_site_id":1472,"uuid":"6e4d3c17-459f-51ad-8856-af69273aecab","session":"-1","session_id":"6e4d3c17-459f-51ad-8856-af69273aecab:1480:-1","child_session_id":"6e4d3c17-459f-51ad-8856-af69273aecab:1472:-1","matching_group":null,"url":"https://oldnavy.gap.com/","path":"/","ip_address":"66.115.199.0","country":"US","region":"IA","city":"West Des Moines","http_user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36","entry_page":null,"entry_referrer":null,"entry_page_type":null,"page_type":null,"timezone":null,"unconfirmed_orders":false,"x":231,"disable_predictions":false,"force_matching":null,"reset_session":false,"new_js_session":false,"new_session_ack":false,"referer":"","ga":{},"source":"direct","service":"","query":"","ms":{"ov":{"tx":4,"im":12,"bu":2,"oh":28},"tm":{"tx":0.5,"im":5.6,"oh":17.2}},"mh":{"R13x174":{"d":1512,"s":15120.1,"a":1424.3,"t":0,"c":0},"R11x177":{"d":216.1,"t":0.1,"s":2160.7,"a":-1295.9,"c":0},"R4x182":{"d":413.5,"t":0.1,"s":4135.3,"a":197.5,"c":0},"L10x182":{"d":745.3,"t":0.1,"s":7453.2,"a":331.8,"c":0},"L18x178":{"d":427.4,"s":4273.8,"a":-317.9,"t":0,"c":0},"L13x174":{"d":351.4,"s":72.8,"a":-6.3,"e":1,"t":0,"c":0},"L11x175":{"d":102.4,"s":1024,"a":95.1,"t":0,"c":0},"L6x174":{"d":242.2,"t":0.5,"s":2421.6,"a":139.8,"c":0},"L7x174":{"d":46.8,"t":0.1,"s":467.5,"a":-195.4,"e":1,"c":0},"L18x176":{"d":564.1,"t":2.7,"s":5641.3,"a":517.4,"c":0},"L17x177":{"d":50,"t":0.1,"s":500,"a":-514.1,"c":0},"L10x174":{"d":370.9,"s":60,"a":-358.9,"e":1,"t":0,"c":0}},"site_state_data":null,"site_state_data_modifier":null,"widget_state_data":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36","callback":null,"wish_list_contents":null,"start_time":1616504094936.0,"category":null,"subcategory":null,"visit_duration":"58.3","current_time":1616589715187.0,"mouse_stats":{"selections":null,"over":{"links":null,"images":12,"text":4,"buttons":2,"other":28},"time":{"links":null,"images":5.6,"text":0.5,"buttons":null,"other":17.2}},"mouse_heatmap":{"R13x174":{"d":1512,"s":15120.1,"a":1424.3,"t":0,"c":0},"R11x177":{"d":216.1,"t":0.1,"s":2160.7,"a":-1295.9,"c":0},"R4x182":{"d":413.5,"t":0.1,"s":4135.3,"a":197.5,"c":0},"L10x182":{"d":745.3,"t":0.1,"s":7453.2,"a":331.8,"c":0},"L18x178":{"d":427.4,"s":4273.8,"a":-317.9,"t":0,"c":0},"L13x174":{"d":351.4,"s":72.8,"a":-6.3,"e":1,"t":0,"c":0},"L11x175":{"d":102.4,"s":1024,"a":95.1,"t":0,"c":0},"L6x174":{"d":242.2,"t":0.5,"s":2421.6,"a":139.8,"c":0},"L7x174":{"d":46.8,"t":0.1,"s":467.5,"a":-195.4,"e":1,"c":0},"L18x176":{"d":564.1,"t":2.7,"s":5641.3,"a":517.4,"c":0},"L17x177":{"d":50,"t":0.1,"s":500,"a":-514.1,"c":0},"L10x174":{"d":370.9,"s":60,"a":-358.9,"e":1,"t":0,"c":0}},"mouse_distance":"16685","scroll_distance":null,"scroll_depth":null,"scroll_top":null,"tab_changes":"10","jsapi":null,"tags":[],"has_unconfirmed_orders":null,"gr_campaign":null,"mt":null,"force_gc":null,"test_request":null,"user":{"uuid":"6e4d3c17-459f-51ad-8856-af69273aecab","_id":"6e4d3c17-459f-51ad-8856-af69273aecab:1480:1616589716","site_id":1480,"user_id":"6e4d3c17-459f-51ad-8856-af69273aecab:1480","sequence_id":1,"session_time":1616589716,"platform":"javascript","keywords":"","ip_address":"66.115.199.0","start_time":"2021-03-24 12:41:56 UTC","end_time":"2021-03-24 12:41:56 UTC","entry_page":"/","entry_page_type":null,"city":"West Des Moines","country":"US","entry_referrer":null,"ga":{},"referer":"","region":"IA","source":"direct","service":"","timezone":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36","session_pending":true,"client_session_id":1616589716340,"session_ack_failures":0,"predictions_disabled":true,"predictions_disabled_reason":"pending","traffic_sources":{"ft_source_type":"direct","ft_referral_domain":"","ft_date":"2021-03-24 12:41:56 UTC","lt_source_type":"direct","lt_referral_domain":"","lt_date":"2021-03-24 12:41:56 UTC"},"meta_info":{"new_session":true,"is_new":false,"ifreturn":true,"returned_buyer":false,"has_orders":false}}},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"66.115.199.167","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"IA","HTTP_X_GEOIP_CITY":"West Des Moines","HTTP_CONNECTION":"close","CONTENT_LENGTH":"964","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 620 Direct3D11 vs_5_0 ps_5_0)","HTTP_ORIGIN":"https://oldnavy.gap.com","HTTP_REFERER":"https://oldnavy.gap.com/","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_FETCH_DEST":"empty","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_SITE":"cross-site","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36","HTTP_X_FORWARDED_FOR":"66.115.199.167","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/match","HTTP_PATH_INFO":"/match","HTTP_REQUEST_URI":"/match","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"66.115.199.167","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"IA","HTTP_HTTP_X_GEOIP_CITY":"West Des Moines","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"964","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 620 Direct3D11 vs_5_0 ps_5_0)","HTTP_HTTP_ORIGIN":"https://oldnavy.gap.com","HTTP_HTTP_REFERER":"https://oldnavy.gap.com/","HTTP_HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_HTTP_SEC_FETCH_DEST":"empty","HTTP_HTTP_SEC_FETCH_MODE":"cors","HTTP_HTTP_SEC_FETCH_SITE":"cross-site","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.72 Safari/537.36","HTTP_HTTP_X_FORWARDED_FOR":"66.115.199.167","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"id":"6e4d3c17-459f-51ad-8856-af69273aecab","s":"-1","sid":"TgCeU","st":"1616504094936","vd":"58.3","ma":"58","x":"231","csid":"m6B40","md":"16685","mh":"{\"R13x174\":{\"d\":1512,\"s\":15120.1,\"a\":1424.3},\"R11x177\":{\"d\":216.1,\"t\":0.1,\"s\":2160.7,\"a\":-1295.9},\"R4x182\":{\"d\":413.5,\"t\":0.1,\"s\":4135.3,\"a\":197.5},\"L10x182\":{\"d\":745.3,\"t\":0.1,\"s\":7453.2,\"a\":331.8},\"L18x178\":{\"d\":427.4,\"s\":4273.8,\"a\":-317.9},\"L13x174\":{\"d\":351.4,\"s\":72.8,\"a\":-6.3,\"e\":1},\"L11x175\":{\"d\":102.4,\"s\":1024,\"a\":95.1},\"L6x174\":{\"d\":242.2,\"t\":0.5,\"s\":2421.6,\"a\":139.8},\"L7x174\":{\"d\":46.8,\"t\":0.1,\"s\":467.5,\"a\":-195.4,\"e\":1},\"L18x176\":{\"d\":564.1,\"t\":2.7,\"s\":5641.3,\"a\":517.4},\"L17x177\":{\"d\":50,\"t\":0.1,\"s\":500,\"a\":-514.1},\"L10x174\":{\"d\":370.9,\"s\":60,\"a\":-358.9,\"e\":1}}","ms":"{\"ov\":{\"tx\":4,\"im\":12,\"bu\":2,\"oh\":28},\"tm\":{\"tx\":0.5,\"im\":5.6,\"oh\":17.2}}","tc":"10","ct":"1616589715187"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324115748","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-0890bfa08dad5fd51","stats":{"mem":{"total":15003.75,"free":2646.6484375,"buffers":4701.27734375,"cached":97.28515625,"free_total":7445.2109375},"load":{"one":4.72,"five":5.3,"fifteen":5.14}},"time":"2021-03-24T12:41:56.340Z","pid":4715}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"b3b6aa47-fd3d-4f02-a5f8-8c67175a6a75","class":"Received order but session is missing, saving has_orders to meta data --order_update.rb:133","message":"Received order but session is missing, saving has_orders to meta data","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"42","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"block (2 levels) in singleton class","source":{"40":"        raise('Params found in context slot during AppLog call.  Use AppLog.<level>(nil, <params>) instead.') if Matching.env == :development && context.is_a?(Hash)\n","41":"\n","42":"        self.log(logger_level,\n","43":"                 context.to_s,\n","44":"                 block ? block.call : nil,\n"}},{"number":"133","file":"[PROJECT_ROOT]/controllers/order_update.rb","method":"update_user","source":{"131":"    elsif meta_data\n","132":"      # still want to log this condition so we can get some metrics on how often this happens.\n","133":"      AppLog.error(\"Received order but session is missing, saving has_orders to meta data\",\n","134":"                   order_number: order[:order_number],\n","135":"                   uuid: order[:uuid],\n"}},{"number":"59","file":"[PROJECT_ROOT]/controllers/order_update.rb","method":"response","source":{"57":"    RedisHelper.order_confirm(key, order[:order_number])\n","58":"    # update user's has_orders parameter and save\n","59":"    update_user(Request.current_user_data, Request.current_user_meta, order)\n","60":"\n","61":"    if should_send_ga_order\n"}},{"number":"112","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"110":"        message = Request.validate_params(params) do\n","111":"          params[:fast_order] = true\n","112":"          OrderUpdate.new(env, params).response\n","113":"        end\n","114":"      when C::ORDERS_UPDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"110","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"108":"        CountHandler.new(env, params).response\n","109":"      when C::ORDERS_FAST_UPDATE_PATH\n","110":"        message = Request.validate_params(params) do\n","111":"          params[:fast_order] = true\n","112":"          OrderUpdate.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/javascript/orders/fast-update?site_id=QrsCf&uuid=3526c4f0-184a-4c1f-bc09-278e67672bc5&session=-1&order_number=1990621916&subtotal_price=17.45&total_price=23.25&currency=USD&item_count=1&method=jsonp&stopped=false&x=231&callback=granify_cb_1616588808756","component":null,"action":null,"params":{"site_id":"1465","uuid":"3526c4f0-184a-4c1f-bc09-278e67672bc5","session":"-1","order_number":"1990621916","subtotal_price":17.45,"total_price":23.25,"currency":"USD","item_count":"1","method":"jsonp","stopped":"false","x":231,"callback":"granify_cb_1616588808756","fast_order":true,"discount_codes":[],"created_at":"2021-03-24 12:26:49 UTC","updated_at":"2021-03-24 12:26:49 UTC","st":1616588809,"is_converted":true},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"GET","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"5.151.214.106","HTTP_X_GEOIP_COUNTRY_CODE":"GB","HTTP_X_GEOIP_REGION_NAME":"I7","HTTP_X_GEOIP_CITY":"Newcastle Upon Tyne","HTTP_CONNECTION":"close","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-gb","HTTP_REFERER":"https://www.etsy.com/","HTTP_USER_AGENT":"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Mobile/15E148 Safari/604.1","HTTP_X_FORWARDED_FOR":"5.151.214.106","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","CONTENT_TYPE":"text/plain","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"GET","HTTP_REQUEST_PATH":"/javascript/orders/fast-update","HTTP_PATH_INFO":"/javascript/orders/fast-update","HTTP_QUERY_STRING":"site_id=QrsCf&uuid=3526c4f0-184a-4c1f-bc09-278e67672bc5&session=-1&order_number=1990621916&subtotal_price=17.45&total_price=23.25&currency=USD&item_count=1&method=jsonp&stopped=false&x=231&callback=granify_cb_1616588808756","HTTP_REQUEST_URI":"/javascript/orders/fast-update?site_id=QrsCf&uuid=3526c4f0-184a-4c1f-bc09-278e67672bc5&session=-1&order_number=1990621916&subtotal_price=17.45&total_price=23.25&currency=USD&item_count=1&method=jsonp&stopped=false&x=231&callback=granify_cb_1616588808756","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"5.151.214.106","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"GB","HTTP_HTTP_X_GEOIP_REGION_NAME":"I7","HTTP_HTTP_X_GEOIP_CITY":"Newcastle Upon Tyne","HTTP_HTTP_CONNECTION":"close","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-gb","HTTP_HTTP_REFERER":"https://www.etsy.com/","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.3 Mobile/15E148 Safari/604.1","HTTP_HTTP_X_FORWARDED_FOR":"5.151.214.106","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_RACK.INPUT":"#<StringIO>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_CONTENT_TYPE":"text/plain","HTTP_RACK.REQUEST.QUERY_STRING":"site_id=QrsCf&uuid=3526c4f0-184a-4c1f-bc09-278e67672bc5&session=-1&order_number=1990621916&subtotal_price=17.45&total_price=23.25&currency=USD&item_count=1&method=jsonp&stopped=false&x=231&callback=granify_cb_1616588808756","HTTP_RACK.REQUEST.QUERY_HASH":{"site_id":"QrsCf","uuid":"3526c4f0-184a-4c1f-bc09-278e67672bc5","session":"-1","order_number":"1990621916","subtotal_price":"17.45","total_price":"23.25","currency":"USD","item_count":"1","method":"jsonp","stopped":"false","x":"231","callback":"granify_cb_1616588808756"}},"context":{}},"server":{"project_root":"/opt/matching/releases/20210323221422","revision":"32f2c86134d4a50eb7ce3cec004e0950c4a7d3e9","environment_name":"production","hostname":"matching-i-0ad2d32887538c1be","stats":{"mem":{"total":15003.76171875,"free":158.30078125,"buffers":1014.7578125,"cached":65.94140625,"free_total":1239.0},"load":{"one":5.32,"five":5.17,"fifteen":5.08}},"time":"2021-03-24T12:26:49.224Z","pid":31656}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"aaabe0dc-19a9-4ee9-8e87-32d958bee5e2","class":"Mysql2::Error --mysql_db_connection.rb:90","message":"Attempt to read a row while there is no result set associated with the statement Mysql error: get_product","backtrace":[{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"each","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"_execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"block in execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"handle_interrupt","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"execute","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"124","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute_query","source":{"122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n","126":"    end\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/mysql_statement_cache.rb","method":"with_statement","source":{"15":"\n","16":"  def with_statement(sql)\n","17":"    yield(statement_for_sql(sql))\n","18":"  rescue Mysql2::Error => e\n","19":"    # If something went wrong, we need to see if our statement is no longer valid.\n"}},{"number":"123","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute_query","source":{"121":"    end\n","122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n"}},{"number":"63","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute","source":{"61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n","65":"  rescue Mysql2::Error::ConnectionError => e\n"}},{"number":"104","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"monitor","source":{"102":"    Utils.monitor_increment(format(C::AURORA_QUERY_COUNT, monitor_label))\n","103":"\n","104":"    res = yield\n","105":"\n","106":"    Utils.monitor_duration(format(C::AURORA_QUERY_TIME, monitor_label), query_start)\n"}},{"number":"62","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute","source":{"60":"\n","61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n"}},{"number":"67","file":"[PROJECT_ROOT]/lib/data/product_catalog_db.rb","method":"get_product","source":{"65":"      begin\n","66":"        conn = Matching.config[:product_catalog_db]\n","67":"        res = conn.execute(query, site_id, product_id, monitor_label: 'pc_get_product')\n","68":"        return res ? res.first : nil\n","69":"\n"}},{"number":"77","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product_from_db","source":{"75":"      return nil unless product_catalog_support?(site_id)\n","76":"\n","77":"      product = Data::ProductCatalogDB.get_product(site_id, product_id)\n","78":"      return unless product\n","79":"\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"23","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"check_db","source":{"21":"\n","22":"    private_class_method def self.check_db(key, db_fetch)\n","23":"      data = db_fetch.call\n","24":"\n","25":"      if data\n"}},{"number":"7","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"get_and_set_if_missing","source":{"5":"      data = check_local_cache(key)\n","6":"      data ||= check_remote_cache(key)\n","7":"      data ||= check_db(key, db_fetch)\n","8":"      data ||= check_expired_cache(key)\n","9":"      data\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"30","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_product?","source":{"28":"\n","29":"    def self.has_product?(site_id, product_id)\n","30":"      !get_product(site_id, product_id).nil?\n","31":"    end\n","32":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"each","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"all?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/campaign_restrictions/required_product_data_restriction.rb","method":"passes?","source":{"15":"      end\n","16":"\n","17":"      unless Data::ProductCatalog.has_products?(Request.current_child_site.data_site_id, product_ids)\n","18":"        message = \"has_products? returned false for: product_data: #{campaign[C::PRODUCT_DATA]}, product_ids: #{product_ids}\"\n","19":"        return fail_restrictions(message)\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"each","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"all?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"campaign_passes_restrictions?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"323","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions_in_context?","source":{"321":"    restriction_types_provider = CampaignRestrictions::RestrictionTypesProvider::Factory.create(campaign_feature_context.offer, Request.force_matching?)\n","322":"    evaluator = CampaignRestrictions::RestrictionEvaluator.new(campaign_feature_context, restriction_types_provider)\n","323":"    evaluator.campaign_passes_restrictions?\n","324":"  end\n","325":"end\n"}},{"number":"189","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions?","source":{"187":"    campaign_feature_context = features.campaign_evaluator(campaign)\n","188":"\n","189":"    campaign_passes_restrictions_in_context?(campaign, campaign_feature_context)\n","190":"  rescue StandardError => e\n","191":"    Response.restriction_failure = e.message\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"block in filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"select!","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"114","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"filter_campaigns","source":{"112":"  def filter_campaigns\n","113":"    campaigns = API::Campaigns.find(Request.current_site.id)\n","114":"    API::Campaigns.filter(campaigns, @features)\n","115":"  end\n","116":"\n"}},{"number":"102","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"match","source":{"100":"\n","101":"    @features.preprocess(Request.params)\n","102":"    available_campaigns = filter_campaigns\n","103":"    # save a list of available campaign_id's that we can use for offline brain training\n","104":"    Request.set_available_campaigns(available_campaigns.map{ |a| a['campaign_id'] })\n"}},{"number":"263","file":"[PROJECT_ROOT]/controllers/match.rb","method":"add_campaign_to_response","source":{"261":"\n","262":"    Utils.monitor_latency(C::MATCH_AI_PREPROCESS, Utils.format_monitor_key(C::MATCH_BY_SITE_AI_PREPROCESS, Request.current_child_site.id))\n","263":"    campaign = me.match\n","264":"\n","265":"    is_single_match_campaign = campaign && !campaign['multimatch']\n"}},{"number":"148","file":"[PROJECT_ROOT]/controllers/match.rb","method":"response","source":{"146":"\n","147":"    # set new or existing predicted campaign (if available) and add to Response:\n","148":"    add_campaign_to_response(current_user_data, current_features)\n","149":"    add_display_status_to_response(current_user_data) unless Request.cached_request?\n","150":"    add_show_not_show_to_response(current_user_data)\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[{"class":"Mysql2::Error","message":"Attempt to read a row while there is no result set associated with the statement","backtrace":[{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"each","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"_execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"block in execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"handle_interrupt","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"execute","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"124","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute_query","source":{"122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n","126":"    end\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/mysql_statement_cache.rb","method":"with_statement","source":{"15":"\n","16":"  def with_statement(sql)\n","17":"    yield(statement_for_sql(sql))\n","18":"  rescue Mysql2::Error => e\n","19":"    # If something went wrong, we need to see if our statement is no longer valid.\n"}},{"number":"123","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute_query","source":{"121":"    end\n","122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n"}},{"number":"63","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute","source":{"61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n","65":"  rescue Mysql2::Error::ConnectionError => e\n"}},{"number":"104","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"monitor","source":{"102":"    Utils.monitor_increment(format(C::AURORA_QUERY_COUNT, monitor_label))\n","103":"\n","104":"    res = yield\n","105":"\n","106":"    Utils.monitor_duration(format(C::AURORA_QUERY_TIME, monitor_label), query_start)\n"}},{"number":"62","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute","source":{"60":"\n","61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n"}},{"number":"67","file":"[PROJECT_ROOT]/lib/data/product_catalog_db.rb","method":"get_product","source":{"65":"      begin\n","66":"        conn = Matching.config[:product_catalog_db]\n","67":"        res = conn.execute(query, site_id, product_id, monitor_label: 'pc_get_product')\n","68":"        return res ? res.first : nil\n","69":"\n"}},{"number":"77","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product_from_db","source":{"75":"      return nil unless product_catalog_support?(site_id)\n","76":"\n","77":"      product = Data::ProductCatalogDB.get_product(site_id, product_id)\n","78":"      return unless product\n","79":"\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"23","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"check_db","source":{"21":"\n","22":"    private_class_method def self.check_db(key, db_fetch)\n","23":"      data = db_fetch.call\n","24":"\n","25":"      if data\n"}},{"number":"7","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"get_and_set_if_missing","source":{"5":"      data = check_local_cache(key)\n","6":"      data ||= check_remote_cache(key)\n","7":"      data ||= check_db(key, db_fetch)\n","8":"      data ||= check_expired_cache(key)\n","9":"      data\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"30","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_product?","source":{"28":"\n","29":"    def self.has_product?(site_id, product_id)\n","30":"      !get_product(site_id, product_id).nil?\n","31":"    end\n","32":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"each","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"all?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/campaign_restrictions/required_product_data_restriction.rb","method":"passes?","source":{"15":"      end\n","16":"\n","17":"      unless Data::ProductCatalog.has_products?(Request.current_child_site.data_site_id, product_ids)\n","18":"        message = \"has_products? returned false for: product_data: #{campaign[C::PRODUCT_DATA]}, product_ids: #{product_ids}\"\n","19":"        return fail_restrictions(message)\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"each","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"all?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"campaign_passes_restrictions?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"323","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions_in_context?","source":{"321":"    restriction_types_provider = CampaignRestrictions::RestrictionTypesProvider::Factory.create(campaign_feature_context.offer, Request.force_matching?)\n","322":"    evaluator = CampaignRestrictions::RestrictionEvaluator.new(campaign_feature_context, restriction_types_provider)\n","323":"    evaluator.campaign_passes_restrictions?\n","324":"  end\n","325":"end\n"}},{"number":"189","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions?","source":{"187":"    campaign_feature_context = features.campaign_evaluator(campaign)\n","188":"\n","189":"    campaign_passes_restrictions_in_context?(campaign, campaign_feature_context)\n","190":"  rescue StandardError => e\n","191":"    Response.restriction_failure = e.message\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"block in filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"select!","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"114","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"filter_campaigns","source":{"112":"  def filter_campaigns\n","113":"    campaigns = API::Campaigns.find(Request.current_site.id)\n","114":"    API::Campaigns.filter(campaigns, @features)\n","115":"  end\n","116":"\n"}},{"number":"102","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"match","source":{"100":"\n","101":"    @features.preprocess(Request.params)\n","102":"    available_campaigns = filter_campaigns\n","103":"    # save a list of available campaign_id's that we can use for offline brain training\n","104":"    Request.set_available_campaigns(available_campaigns.map{ |a| a['campaign_id'] })\n"}},{"number":"263","file":"[PROJECT_ROOT]/controllers/match.rb","method":"add_campaign_to_response","source":{"261":"\n","262":"    Utils.monitor_latency(C::MATCH_AI_PREPROCESS, Utils.format_monitor_key(C::MATCH_BY_SITE_AI_PREPROCESS, Request.current_child_site.id))\n","263":"    campaign = me.match\n","264":"\n","265":"    is_single_match_campaign = campaign && !campaign['multimatch']\n"}},{"number":"148","file":"[PROJECT_ROOT]/controllers/match.rb","method":"response","source":{"146":"\n","147":"    # set new or existing predicted campaign (if available) and add to Response:\n","148":"    add_campaign_to_response(current_user_data, current_features)\n","149":"    add_display_status_to_response(current_user_data) unless Request.cached_request?\n","150":"    add_show_not_show_to_response(current_user_data)\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}]}]},"details":{},"request":{"url":"https://matching.granify.com/match","component":null,"action":null,"params":{"flags":null,"site_id":1455,"child_site_id":1455,"uuid":"28a307de-73c8-489a-9888-d0d80fe81552","session":"-1","session_id":"28a307de-73c8-489a-9888-d0d80fe81552:1455:-1","child_session_id":"28a307de-73c8-489a-9888-d0d80fe81552:1455:-1","matching_group":null,"url":"https://www.qvc.com/content/featured/clearance.html?qq=mh&currentPage=5","path":"/content/featured/clearance.html?qq=mh&currentPage=5","ip_address":"97.73.244.0","country":"US","region":"CA","city":"unknown","http_user_agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 OPR/74.0.3911.203 (Edition Campaign ISYF)","entry_page":null,"entry_referrer":null,"entry_page_type":null,"page_type":"collection","timezone":"-6","unconfirmed_orders":false,"x":231,"disable_predictions":false,"force_matching":null,"reset_session":false,"new_js_session":false,"new_session_ack":false,"referer":"","ga":{},"source":"direct","service":"","query":"","ms":{"ov":{"tx":53,"lk":36,"im":35,"oh":116},"cl":{"im":1},"tm":{"tx":7.9,"lk":2.7,"im":21.2,"oh":9.1}},"mh":{"R4x108":{"d":73,"t":1.4,"s":100.5,"a":9,"c":0}},"site_state_data":null,"site_state_data_modifier":null,"widget_state_data":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 OPR/74.0.3911.203 (Edition Campaign ISYF)","callback":null,"wish_list_contents":null,"start_time":1616589427778.0,"category":null,"subcategory":null,"visit_duration":"44.4","current_time":1616589472173.0,"mouse_stats":{"selections":null,"over":{"links":36,"images":35,"text":53,"buttons":null,"other":116},"time":{"links":2.7,"images":21.2,"text":7.9,"buttons":null,"other":9.1},"click":{"links":null,"images":1,"text":null,"buttons":null,"other":null}},"mouse_heatmap":{"R4x108":{"d":73,"t":1.4,"s":100.5,"a":9,"c":0}},"mouse_distance":"23734.6","scroll_distance":"5050","scroll_depth":"29.9","scroll_top":"5050","tab_changes":null,"jsapi":null,"tags":[],"has_unconfirmed_orders":null,"gr_campaign":null,"mt":null,"force_gc":null,"test_request":null,"viewport":{"h":936,"w":1880},"data":{},"product_id":["A380272","A382633","A347084","A383165","A384458"]},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"97.73.244.81","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"CA","HTTP_CONNECTION":"close","CONTENT_LENGTH":"335","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"ANGLE (NVIDIA GeForce GT 730 Direct3D11 vs_5_0 ps_5_0)","HTTP_ORIGIN":"https://www.qvc.com","HTTP_REFERER":"https://www.qvc.com/content/featured/clearance.html?qq=mh&currentPage=5","HTTP_SEC_FETCH_DEST":"empty","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_SITE":"cross-site","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 OPR/74.0.3911.203 (Edition Campaign ISYF)","HTTP_X_FORWARDED_FOR":"97.73.244.81","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/match","HTTP_PATH_INFO":"/match","HTTP_REQUEST_URI":"/match","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"97.73.244.81","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"CA","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"335","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"ANGLE (NVIDIA GeForce GT 730 Direct3D11 vs_5_0 ps_5_0)","HTTP_HTTP_ORIGIN":"https://www.qvc.com","HTTP_HTTP_REFERER":"https://www.qvc.com/content/featured/clearance.html?qq=mh&currentPage=5","HTTP_HTTP_SEC_FETCH_DEST":"empty","HTTP_HTTP_SEC_FETCH_MODE":"cors","HTTP_HTTP_SEC_FETCH_SITE":"cross-site","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36 OPR/74.0.3911.203 (Edition Campaign ISYF)","HTTP_HTTP_X_FORWARDED_FOR":"97.73.244.81","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"id":"28a307de-73c8-489a-9888-d0d80fe81552","s":"-1","sid":"nJpuD","st":"1616589427778","vd":"44.4","ma":"45","x":"231","md":"23734.6","mh":"{\"R4x108\":{\"d\":73,\"t\":1.4,\"s\":100.5,\"a\":9}}","ms":"{\"ov\":{\"tx\":53,\"lk\":36,\"im\":35,\"oh\":116},\"cl\":{\"im\":1},\"tm\":{\"tx\":7.9,\"lk\":2.7,\"im\":21.2,\"oh\":9.1}}","ct":"1616589472173"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324101038","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-03513abcac1e6be7d","stats":{"mem":{"total":15003.75,"free":206.71875,"buffers":1471.07421875,"cached":105.578125,"free_total":1783.37109375},"load":{"one":5.72,"five":6.07,"fifteen":5.72}},"time":"2021-03-24T12:37:56.075Z","pid":4692}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"70bb1564-6bd2-4272-a3eb-94184768eee3","class":"log_error-HSN: sendEventsForHSNClientElementInteractions() - Expected mobile client add to bag element not present. --log_handler.rb:46","message":"log_error-HSN: sendEventsForHSNClientElementInteractions() - Expected mobile client add to bag element not present. {}","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"65","file":"[PROJECT_ROOT]/controllers/log_handler.rb","method":"block in response","source":{"63":"        Utils.monitor_increment(format(C::HONEYBADGER_NOTIFY_JS_SITE_COUNT, log_entry.site_id))\n","64":"\n","65":"        AppLog.log(\n","66":"          log[:logger_level],\n","67":"          log[:name],\n"}},{"number":"46","file":"[PROJECT_ROOT]/controllers/log_handler.rb","method":"each","source":{"44":"    Utils.monitor_latency(C::LOG_PARAMS_PREPARED)\n","45":"\n","46":"    logs.each do |log|\n","47":"      log_entry = LogEntry.process(log)\n","48":"      log = log_entry.log_data\n"}},{"number":"46","file":"[PROJECT_ROOT]/controllers/log_handler.rb","method":"response","source":{"44":"    Utils.monitor_latency(C::LOG_PARAMS_PREPARED)\n","45":"\n","46":"    logs.each do |log|\n","47":"      log_entry = LogEntry.process(log)\n","48":"      log = log_entry.log_data\n"}},{"number":"106","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"104":"      when C::LOG_PATH, C::ERROR_PATH\n","105":"        Request.set_monitor_latency\n","106":"        LogHandler.new(env, params).response\n","107":"      when C::COUNT_PATH\n","108":"        CountHandler.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/log","component":null,"action":null,"params":{"errors":"[{\"name\":\"log_error-HSN: sendEventsForHSNClientElementInteractions() - Expected mobile client add to bag element not present.\",\"level\":\"error\",\"message\":\"{}\",\"version\":\"2021-03-24 12:42:10 +0000\",\"js_version\":231,\"browser\":\"WebKit\",\"stack\":\"https://cdn.granify.com/assets/javascript.js?id=1402:58:66150\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:66783\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:60:7012\\na@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311\\ni@https://cdn.granify.com/assets/javascript.js?id=1402:58:75707\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:75894\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:76119\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:139456\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\ncallTrackPageView@https://cdn.granify.com/assets/javascript.js?id=1402:58:173050\\nupdatePageType@https://cdn.granify.com/assets/javascript.js?id=1402:58:170894\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:170445\\na@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:76664\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\ninit@https://cdn.granify.com/assets/javascript.js?id=1402:58:170348\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:168547\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:206108\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:205705\\npromiseReactionJob@[native code]\",\"site_id\":1402,\"csid\":null,\"UUID\":\"a8d70578-76f4-46d5-9b0d-ff82a666c18f\",\"env\":\"production\"}]","logs":[{"name":"log_error-HSN: sendEventsForHSNClientElementInteractions() - Expected mobile client add to bag element not present.","message":"{}","js_version":231,"browser":"WebKit","stack":["https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:58:66783","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:60:7012","a@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311","i@https://cdn.granify.com/assets/javascript.js?id=1402:58:75707","https://cdn.granify.com/assets/javascript.js?id=1402:58:75894","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:58:76119","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:58:139456","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","callTrackPageView@https://cdn.granify.com/assets/javascript.js?id=1402:58:173050","updatePageType@https://cdn.granify.com/assets/javascript.js?id=1402:58:170894","https://cdn.granify.com/assets/javascript.js?id=1402:58:170445","a@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311","https://cdn.granify.com/assets/javascript.js?id=1402:58:76664","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","init@https://cdn.granify.com/assets/javascript.js?id=1402:58:170348","https://cdn.granify.com/assets/javascript.js?id=1402:58:168547","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:58:206108","https://cdn.granify.com/assets/javascript.js?id=1402:58:67637","https://cdn.granify.com/assets/javascript.js?id=1402:58:205705","promiseReactionJob@[native code]"],"site_id":1402,"csid":null,"UUID":"a8d70578-76f4-46d5-9b0d-ff82a666c18f","env":"production","error_time":"2021-03-24 12:48:26 UTC","log_level":"error","logger_level":3}],"x":231,"site_id":1402,"csid":null,"uuid":"a8d70578-76f4-46d5-9b0d-ff82a666c18f"},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"108.178.89.30","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"TX","HTTP_X_GEOIP_CITY":"Austin","HTTP_CONNECTION":"close","CONTENT_LENGTH":"2070","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-us","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"Apple GPU","HTTP_ORIGIN":"https://www.hsn.com","HTTP_REFERER":"https://www.hsn.com/","HTTP_USER_AGENT":"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 [FBAN/FBIOS;FBDV/iPhone12,5;FBMD/iPhone;FBSN/iOS;FBSV/14.4;FBSS/3;FBID/phone;FBLC/en_US;FBOP/5]","HTTP_X_FORWARDED_FOR":"108.178.89.30","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/log","HTTP_PATH_INFO":"/log","HTTP_REQUEST_URI":"/log","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"108.178.89.30","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"TX","HTTP_HTTP_X_GEOIP_CITY":"Austin","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"2070","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-us","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"Apple GPU","HTTP_HTTP_ORIGIN":"https://www.hsn.com","HTTP_HTTP_REFERER":"https://www.hsn.com/","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (iPhone; CPU iPhone OS 14_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 [FBAN/FBIOS;FBDV/iPhone12,5;FBMD/iPhone;FBSN/iOS;FBSV/14.4;FBSS/3;FBID/phone;FBLC/en_US;FBOP/5]","HTTP_HTTP_X_FORWARDED_FOR":"108.178.89.30","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"errors":"[{\"name\":\"log_error-HSN: sendEventsForHSNClientElementInteractions() - Expected mobile client add to bag element not present.\",\"level\":\"error\",\"message\":\"{}\",\"version\":\"2021-03-24 12:42:10 +0000\",\"js_version\":231,\"browser\":\"WebKit\",\"stack\":\"https://cdn.granify.com/assets/javascript.js?id=1402:58:66150\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:66783\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:60:7012\\na@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311\\ni@https://cdn.granify.com/assets/javascript.js?id=1402:58:75707\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:75894\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:76119\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:139456\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\ncallTrackPageView@https://cdn.granify.com/assets/javascript.js?id=1402:58:173050\\nupdatePageType@https://cdn.granify.com/assets/javascript.js?id=1402:58:170894\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:170445\\na@https://cdn.granify.com/assets/javascript.js?id=1402:58:75311\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:76664\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\ninit@https://cdn.granify.com/assets/javascript.js?id=1402:58:170348\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:168547\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:206108\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:67637\\nhttps://cdn.granify.com/assets/javascript.js?id=1402:58:205705\\npromiseReactionJob@[native code]\",\"site_id\":1402,\"csid\":null,\"UUID\":\"a8d70578-76f4-46d5-9b0d-ff82a666c18f\",\"env\":\"production\"}]"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{"user_id":"a8d70578-76f4-46d5-9b0d-ff82a666c18f","site_id":1402,"version":"2021-03-24 12:42:10 +0000","env":"production"}},"server":{"project_root":"/opt/matching/releases/20210324104944","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-032d9392181f9f0fd","stats":{"mem":{"total":15003.76171875,"free":176.75,"buffers":1670.765625,"cached":102.67578125,"free_total":1950.19140625},"load":{"one":5.16,"five":4.95,"fifteen":5.06}},"time":"2021-03-24T12:48:26.019Z","pid":4763}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"76f5cf3f-7dab-45f8-813b-cb23c8fffcbb","class":"No matching group specified --user_data.rb:375","message":"No matching group specified","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"42","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"block (2 levels) in singleton class","source":{"40":"        raise('Params found in context slot during AppLog call.  Use AppLog.<level>(nil, <params>) instead.') if Matching.env == :development && context.is_a?(Hash)\n","41":"\n","42":"        self.log(logger_level,\n","43":"                 context.to_s,\n","44":"                 block ? block.call : nil,\n"}},{"number":"375","file":"[PROJECT_ROOT]/models/user_data.rb","method":"initialize_matching_group","source":{"373":"                                raise RequestAborted\n","374":"                              else\n","375":"                                AppLog.error('No matching group specified', site_id: Request.current_site.id,\n","376":"                                                                            path: Request.params[:path].split(/\\?/).first,\n","377":"                                                                            user: user)\n"}},{"number":"227","file":"[PROJECT_ROOT]/models/user_data.rb","method":"build_session_data","source":{"225":"    session_data[:meta_info] = build_session_meta_info(saved_meta)\n","226":"\n","227":"    initialize_matching_group(session_data, saved_meta)\n","228":"    initialize_session_stage(session_data)\n","229":"\n"}},{"number":"311","file":"[PROJECT_ROOT]/models/user_data.rb","method":"new_session","source":{"309":"  # If saved_meta is present it creates a returning user, otherwise it creates a new user.\n","310":"  def self.new_session(uuid, saved_meta)\n","311":"    session_data = build_session_data(uuid, saved_meta)\n","312":"\n","313":"    session = UserData.new(session_data)\n"}},{"number":"41","file":"[PROJECT_ROOT]/models/session_strategy.rb","method":"resolve_session","source":{"39":"      existing_matching_group = [user[\"matching_group\"].to_s] if user && user[\"matching_group\"]\n","40":"      Request.params[:matching_group] ||= existing_matching_group if user && Request.current_site[:site_assigns_groups]\n","41":"      UserData.new_session(uuid, meta)\n","42":"    else\n","43":"      user_data = get_user_data(user)\n"}},{"number":"195","file":"[PROJECT_ROOT]/models/user_data.rb","method":"update_user","source":{"193":"    end\n","194":"\n","195":"    user = session_strategy.resolve_session(uuid, user, meta, USER_DATA_EXPIRATION.seconds.ago)\n","196":"\n","197":"    if predictions_disabled\n"}},{"number":"16","file":"[PROJECT_ROOT]/controllers/base_controller.rb","method":"set_current_user","source":{"14":"    return unless Request.lock_acquired?\n","15":"\n","16":"    user_data = UserData.update_user(params[:uuid], data, meta)\n","17":"\n","18":"    if data && data['broken_session']\n"}},{"number":"40","file":"[PROJECT_ROOT]/controllers/match.rb","method":"initialize","source":{"38":"      Utils.monitor_latency(C::MATCH_PARAMS_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_PARAMS_LOAD, Request.current_child_site.id))\n","39":"\n","40":"      set_current_user(Request.params)\n","41":"      Utils.monitor_latency(C::MATCH_USER_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_USER_LOAD, Request.current_child_site.id))\n","42":"\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"new","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/match","component":null,"action":null,"params":{"flags":null,"site_id":1480,"child_site_id":1472,"uuid":"4a16c27d-d606-590d-be3f-536a860e4977","session":"-1","session_id":"4a16c27d-d606-590d-be3f-536a860e4977:1480:-1","child_session_id":"4a16c27d-d606-590d-be3f-536a860e4977:1472:-1","matching_group":null,"url":"https://secure-oldnavy.gap.com/","path":"/","ip_address":"68.142.157.0","country":"US","region":"CO","city":"Englewood","http_user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","entry_page":null,"entry_referrer":null,"entry_page_type":null,"page_type":null,"timezone":null,"unconfirmed_orders":false,"x":231,"disable_predictions":false,"force_matching":null,"reset_session":false,"new_js_session":false,"new_session_ack":false,"referer":"","ga":{},"source":"direct","service":"","query":"","ms":{"ov":{"tx":1,"lk":3,"im":2,"bu":2,"oh":30},"cl":{"tx":1},"tm":{"lk":0.2,"oh":9.2}},"mh":{"L8x39":{"d":895.5,"s":8955.4,"a":641.3,"t":0,"c":0},"L2x24":{"d":818.2,"s":8182.3,"a":-77.3,"t":0,"c":0}},"site_state_data":null,"site_state_data_modifier":null,"widget_state_data":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","callback":null,"wish_list_contents":null,"start_time":1616527403457.0,"category":null,"subcategory":null,"visit_duration":"22.2","current_time":1616590168110.0,"mouse_stats":{"selections":null,"over":{"links":3,"images":2,"text":1,"buttons":2,"other":30},"click":{"links":null,"images":null,"text":1,"buttons":null,"other":null},"time":{"links":0.2,"images":null,"text":null,"buttons":null,"other":9.2}},"mouse_heatmap":{"L8x39":{"d":895.5,"s":8955.4,"a":641.3,"t":0,"c":0},"L2x24":{"d":818.2,"s":8182.3,"a":-77.3,"t":0,"c":0}},"mouse_distance":"12327.1","scroll_distance":null,"scroll_depth":null,"scroll_top":null,"tab_changes":"2","jsapi":null,"tags":[],"has_unconfirmed_orders":null,"gr_campaign":null,"mt":null,"force_gc":null,"test_request":null,"user":{"uuid":"4a16c27d-d606-590d-be3f-536a860e4977","_id":"4a16c27d-d606-590d-be3f-536a860e4977:1480:1616590168","site_id":1480,"user_id":"4a16c27d-d606-590d-be3f-536a860e4977:1480","sequence_id":1,"session_time":1616590168,"platform":"javascript","keywords":"","ip_address":"68.142.157.0","start_time":"2021-03-24 12:49:28 UTC","end_time":"2021-03-24 12:49:28 UTC","entry_page":"/","entry_page_type":null,"city":"Englewood","country":"US","entry_referrer":null,"ga":{},"referer":"","region":"CO","source":"direct","service":"","timezone":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","session_pending":true,"client_session_id":1616590168297,"session_ack_failures":0,"predictions_disabled":true,"predictions_disabled_reason":"pending","traffic_sources":{"ft_source_type":"direct","ft_referral_domain":"","ft_date":"2021-03-24 12:49:28 UTC","lt_source_type":"direct","lt_referral_domain":"","lt_date":"2021-03-24 12:49:28 UTC"},"meta_info":{"new_session":true,"is_new":false,"ifreturn":true,"returned_buyer":false,"has_orders":false}}},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"68.142.157.4","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"CO","HTTP_X_GEOIP_CITY":"Englewood","HTTP_CONNECTION":"close","CONTENT_LENGTH":"387","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 630 Direct3D11 vs_5_0 ps_5_0)","HTTP_ORIGIN":"https://secure-oldnavy.gap.com","HTTP_REFERER":"https://secure-oldnavy.gap.com/","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_FETCH_DEST":"empty","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_SITE":"cross-site","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","HTTP_X_FORWARDED_FOR":"68.142.157.4","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/match","HTTP_PATH_INFO":"/match","HTTP_REQUEST_URI":"/match","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"68.142.157.4","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"CO","HTTP_HTTP_X_GEOIP_CITY":"Englewood","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"387","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 630 Direct3D11 vs_5_0 ps_5_0)","HTTP_HTTP_ORIGIN":"https://secure-oldnavy.gap.com","HTTP_HTTP_REFERER":"https://secure-oldnavy.gap.com/","HTTP_HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_HTTP_SEC_FETCH_DEST":"empty","HTTP_HTTP_SEC_FETCH_MODE":"cors","HTTP_HTTP_SEC_FETCH_SITE":"cross-site","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","HTTP_HTTP_X_FORWARDED_FOR":"68.142.157.4","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"id":"4a16c27d-d606-590d-be3f-536a860e4977","s":"-1","sid":"TgCeU","st":"1616527403457","vd":"22.2","ma":"18.5","x":"231","csid":"m6B40","md":"12327.1","mh":"{\"L8x39\":{\"d\":895.5,\"s\":8955.4,\"a\":641.3},\"L2x24\":{\"d\":818.2,\"s\":8182.3,\"a\":-77.3}}","ms":"{\"ov\":{\"tx\":1,\"lk\":3,\"im\":2,\"bu\":2,\"oh\":30},\"cl\":{\"tx\":1},\"tm\":{\"lk\":0.2,\"oh\":9.2}}","tc":"2","ct":"1616590168110"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324115744","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-01ae80c7ca647399f","stats":{"mem":{"total":15003.75,"free":1781.8984375,"buffers":3841.6875,"cached":97.5703125,"free_total":5721.15625},"load":{"one":4.66,"five":4.67,"fifteen":4.87}},"time":"2021-03-24T12:49:28.297Z","pid":4678}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"2558e0f6-ab3c-4790-8cc6-3c3f98f1ee4f","class":"Mysql2::Error --mysql_db_connection.rb:90","message":"Attempt to read a row while there is no result set associated with the statement Mysql error: get_product","backtrace":[{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"each","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"_execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"block in execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"handle_interrupt","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"execute","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"124","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute_query","source":{"122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n","126":"    end\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/mysql_statement_cache.rb","method":"with_statement","source":{"15":"\n","16":"  def with_statement(sql)\n","17":"    yield(statement_for_sql(sql))\n","18":"  rescue Mysql2::Error => e\n","19":"    # If something went wrong, we need to see if our statement is no longer valid.\n"}},{"number":"123","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute_query","source":{"121":"    end\n","122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n"}},{"number":"63","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute","source":{"61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n","65":"  rescue Mysql2::Error::ConnectionError => e\n"}},{"number":"104","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"monitor","source":{"102":"    Utils.monitor_increment(format(C::AURORA_QUERY_COUNT, monitor_label))\n","103":"\n","104":"    res = yield\n","105":"\n","106":"    Utils.monitor_duration(format(C::AURORA_QUERY_TIME, monitor_label), query_start)\n"}},{"number":"62","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute","source":{"60":"\n","61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n"}},{"number":"67","file":"[PROJECT_ROOT]/lib/data/product_catalog_db.rb","method":"get_product","source":{"65":"      begin\n","66":"        conn = Matching.config[:product_catalog_db]\n","67":"        res = conn.execute(query, site_id, product_id, monitor_label: 'pc_get_product')\n","68":"        return res ? res.first : nil\n","69":"\n"}},{"number":"77","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product_from_db","source":{"75":"      return nil unless product_catalog_support?(site_id)\n","76":"\n","77":"      product = Data::ProductCatalogDB.get_product(site_id, product_id)\n","78":"      return unless product\n","79":"\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"23","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"check_db","source":{"21":"\n","22":"    private_class_method def self.check_db(key, db_fetch)\n","23":"      data = db_fetch.call\n","24":"\n","25":"      if data\n"}},{"number":"7","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"get_and_set_if_missing","source":{"5":"      data = check_local_cache(key)\n","6":"      data ||= check_remote_cache(key)\n","7":"      data ||= check_db(key, db_fetch)\n","8":"      data ||= check_expired_cache(key)\n","9":"      data\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"30","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_product?","source":{"28":"\n","29":"    def self.has_product?(site_id, product_id)\n","30":"      !get_product(site_id, product_id).nil?\n","31":"    end\n","32":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"each","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"all?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/campaign_restrictions/required_product_data_restriction.rb","method":"passes?","source":{"15":"      end\n","16":"\n","17":"      unless Data::ProductCatalog.has_products?(Request.current_child_site.data_site_id, product_ids)\n","18":"        message = \"has_products? returned false for: product_data: #{campaign[C::PRODUCT_DATA]}, product_ids: #{product_ids}\"\n","19":"        return fail_restrictions(message)\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"each","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"all?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"campaign_passes_restrictions?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"323","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions_in_context?","source":{"321":"    restriction_types_provider = CampaignRestrictions::RestrictionTypesProvider::Factory.create(campaign_feature_context.offer, Request.force_matching?)\n","322":"    evaluator = CampaignRestrictions::RestrictionEvaluator.new(campaign_feature_context, restriction_types_provider)\n","323":"    evaluator.campaign_passes_restrictions?\n","324":"  end\n","325":"end\n"}},{"number":"189","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions?","source":{"187":"    campaign_feature_context = features.campaign_evaluator(campaign)\n","188":"\n","189":"    campaign_passes_restrictions_in_context?(campaign, campaign_feature_context)\n","190":"  rescue StandardError => e\n","191":"    Response.restriction_failure = e.message\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"block in filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"select!","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"114","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"filter_campaigns","source":{"112":"  def filter_campaigns\n","113":"    campaigns = API::Campaigns.find(Request.current_site.id)\n","114":"    API::Campaigns.filter(campaigns, @features)\n","115":"  end\n","116":"\n"}},{"number":"102","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"match","source":{"100":"\n","101":"    @features.preprocess(Request.params)\n","102":"    available_campaigns = filter_campaigns\n","103":"    # save a list of available campaign_id's that we can use for offline brain training\n","104":"    Request.set_available_campaigns(available_campaigns.map{ |a| a['campaign_id'] })\n"}},{"number":"263","file":"[PROJECT_ROOT]/controllers/match.rb","method":"add_campaign_to_response","source":{"261":"\n","262":"    Utils.monitor_latency(C::MATCH_AI_PREPROCESS, Utils.format_monitor_key(C::MATCH_BY_SITE_AI_PREPROCESS, Request.current_child_site.id))\n","263":"    campaign = me.match\n","264":"\n","265":"    is_single_match_campaign = campaign && !campaign['multimatch']\n"}},{"number":"148","file":"[PROJECT_ROOT]/controllers/match.rb","method":"response","source":{"146":"\n","147":"    # set new or existing predicted campaign (if available) and add to Response:\n","148":"    add_campaign_to_response(current_user_data, current_features)\n","149":"    add_display_status_to_response(current_user_data) unless Request.cached_request?\n","150":"    add_show_not_show_to_response(current_user_data)\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[{"class":"Mysql2::Error","message":"Attempt to read a row while there is no result set associated with the statement","backtrace":[{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"each","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"_execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"7","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"block in execute","source":{"5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n","9":"    end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"handle_interrupt","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"6","file":"[GEM_ROOT]/gems/mysql2-0.5.2/lib/mysql2/statement.rb","method":"execute","source":{"4":"\n","5":"    def execute(*args, **kwargs)\n","6":"      Thread.handle_interrupt(::Mysql2::Util::TIMEOUT_ERROR_CLASS => :never) do\n","7":"        _execute(*args, **kwargs)\n","8":"      end\n"}},{"number":"124","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute_query","source":{"122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n","126":"    end\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/mysql_statement_cache.rb","method":"with_statement","source":{"15":"\n","16":"  def with_statement(sql)\n","17":"    yield(statement_for_sql(sql))\n","18":"  rescue Mysql2::Error => e\n","19":"    # If something went wrong, we need to see if our statement is no longer valid.\n"}},{"number":"123","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute_query","source":{"121":"    end\n","122":"\n","123":"    stmt_cache.with_statement(sql) do |stmt|\n","124":"      res = stmt.execute(*args)\n","125":"      row_class ? res.map {|row| row_class.new(row)} : res\n"}},{"number":"63","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"block in execute","source":{"61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n","65":"  rescue Mysql2::Error::ConnectionError => e\n"}},{"number":"104","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"monitor","source":{"102":"    Utils.monitor_increment(format(C::AURORA_QUERY_COUNT, monitor_label))\n","103":"\n","104":"    res = yield\n","105":"\n","106":"    Utils.monitor_duration(format(C::AURORA_QUERY_TIME, monitor_label), query_start)\n"}},{"number":"62","file":"[PROJECT_ROOT]/lib/mysql_db_connection.rb","method":"execute","source":{"60":"\n","61":"  def execute(sql, *args, row_class: nil, monitor_label: nil, dirty_reads: false)\n","62":"    monitor(monitor_label) do\n","63":"      execute_query(sql, args, row_class, dirty_reads)\n","64":"    end\n"}},{"number":"67","file":"[PROJECT_ROOT]/lib/data/product_catalog_db.rb","method":"get_product","source":{"65":"      begin\n","66":"        conn = Matching.config[:product_catalog_db]\n","67":"        res = conn.execute(query, site_id, product_id, monitor_label: 'pc_get_product')\n","68":"        return res ? res.first : nil\n","69":"\n"}},{"number":"77","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product_from_db","source":{"75":"      return nil unless product_catalog_support?(site_id)\n","76":"\n","77":"      product = Data::ProductCatalogDB.get_product(site_id, product_id)\n","78":"      return unless product\n","79":"\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"23","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"check_db","source":{"21":"\n","22":"    private_class_method def self.check_db(key, db_fetch)\n","23":"      data = db_fetch.call\n","24":"\n","25":"      if data\n"}},{"number":"7","file":"[PROJECT_ROOT]/lib/data/cached_data_accessor.rb","method":"get_and_set_if_missing","source":{"5":"      data = check_local_cache(key)\n","6":"      data ||= check_remote_cache(key)\n","7":"      data ||= check_db(key, db_fetch)\n","8":"      data ||= check_expired_cache(key)\n","9":"      data\n"}},{"number":"18","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"get_product","source":{"16":"    def self.get_product(site_id, product_id, additional_fields_to_return = [])\n","17":"      key = build_single_product_key(site_id, product_id)\n","18":"      data = CachedDataAccessor.get_and_set_if_missing(key) { get_product_from_db(site_id, product_id) }\n","19":"      selected_fields(data, additional_fields_to_return)\n","20":"    end\n"}},{"number":"30","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_product?","source":{"28":"\n","29":"    def self.has_product?(site_id, product_id)\n","30":"      !get_product(site_id, product_id).nil?\n","31":"    end\n","32":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"block in has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"each","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"all?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"34","file":"[PROJECT_ROOT]/lib/data/product_catalog.rb","method":"has_products?","source":{"32":"\n","33":"    def self.has_products?(site_id, product_ids)\n","34":"      product_ids.all? { |product_id| has_product?(site_id, product_id) }\n","35":"    end\n","36":"\n"}},{"number":"17","file":"[PROJECT_ROOT]/lib/campaign_restrictions/required_product_data_restriction.rb","method":"passes?","source":{"15":"      end\n","16":"\n","17":"      unless Data::ProductCatalog.has_products?(Request.current_child_site.data_site_id, product_ids)\n","18":"        message = \"has_products? returned false for: product_data: #{campaign[C::PRODUCT_DATA]}, product_ids: #{product_ids}\"\n","19":"        return fail_restrictions(message)\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"each","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"all?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"13","file":"[PROJECT_ROOT]/lib/campaign_restrictions/restriction_evaluator.rb","method":"campaign_passes_restrictions?","source":{"11":"\n","12":"    def campaign_passes_restrictions?\n","13":"      restrictions.all?(&:passes?)\n","14":"    end\n","15":"\n"}},{"number":"323","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions_in_context?","source":{"321":"    restriction_types_provider = CampaignRestrictions::RestrictionTypesProvider::Factory.create(campaign_feature_context.offer, Request.force_matching?)\n","322":"    evaluator = CampaignRestrictions::RestrictionEvaluator.new(campaign_feature_context, restriction_types_provider)\n","323":"    evaluator.campaign_passes_restrictions?\n","324":"  end\n","325":"end\n"}},{"number":"189","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"campaign_passes_restrictions?","source":{"187":"    campaign_feature_context = features.campaign_evaluator(campaign)\n","188":"\n","189":"    campaign_passes_restrictions_in_context?(campaign, campaign_feature_context)\n","190":"  rescue StandardError => e\n","191":"    Response.restriction_failure = e.message\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"block in filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"select!","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"213","file":"[PROJECT_ROOT]/models/api/campaigns.rb","method":"filter","source":{"211":"  def self.filter(campaigns, features)\n","212":"    campaigns.select! { |campaign| campaign_child_site_valid?(campaign) }\n","213":"    campaigns.select!{ |campaign| campaign_passes_restrictions?(campaign, features) }\n","214":"    AppLog.info { \"Selected #{campaigns.length} campaigns: #{campaigns.map { |c| c['campaign_id'] }}\" }\n","215":"    campaigns\n"}},{"number":"114","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"filter_campaigns","source":{"112":"  def filter_campaigns\n","113":"    campaigns = API::Campaigns.find(Request.current_site.id)\n","114":"    API::Campaigns.filter(campaigns, @features)\n","115":"  end\n","116":"\n"}},{"number":"102","file":"[PROJECT_ROOT]/lib/matching_engine.rb","method":"match","source":{"100":"\n","101":"    @features.preprocess(Request.params)\n","102":"    available_campaigns = filter_campaigns\n","103":"    # save a list of available campaign_id's that we can use for offline brain training\n","104":"    Request.set_available_campaigns(available_campaigns.map{ |a| a['campaign_id'] })\n"}},{"number":"263","file":"[PROJECT_ROOT]/controllers/match.rb","method":"add_campaign_to_response","source":{"261":"\n","262":"    Utils.monitor_latency(C::MATCH_AI_PREPROCESS, Utils.format_monitor_key(C::MATCH_BY_SITE_AI_PREPROCESS, Request.current_child_site.id))\n","263":"    campaign = me.match\n","264":"\n","265":"    is_single_match_campaign = campaign && !campaign['multimatch']\n"}},{"number":"148","file":"[PROJECT_ROOT]/controllers/match.rb","method":"response","source":{"146":"\n","147":"    # set new or existing predicted campaign (if available) and add to Response:\n","148":"    add_campaign_to_response(current_user_data, current_features)\n","149":"    add_display_status_to_response(current_user_data) unless Request.cached_request?\n","150":"    add_show_not_show_to_response(current_user_data)\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}]}]},"details":{},"request":{"url":"https://matching.granify.com/match","component":null,"action":null,"params":{"flags":null,"site_id":1455,"child_site_id":1455,"uuid":"e3f993bc-9583-4b7c-8847-aaa1efdb7da7","session":"-1","session_id":"e3f993bc-9583-4b7c-8847-aaa1efdb7da7:1455:-1","child_session_id":"e3f993bc-9583-4b7c-8847-aaa1efdb7da7:1455:-1","matching_group":null,"url":"https://www.qvc.com/","path":"/","ip_address":"50.235.220.0","country":"US","region":"unknown","city":"unknown","http_user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","entry_page":null,"entry_referrer":null,"entry_page_type":null,"page_type":"product","timezone":"-4","unconfirmed_orders":false,"x":231,"disable_predictions":false,"force_matching":null,"reset_session":false,"new_js_session":false,"new_session_ack":false,"referer":"","ga":{},"source":"direct","service":"","query":"","ms":{"ov":{"tx":1,"lk":1,"oh":14},"cl":{"oh":2},"tm":{"lk":0.1,"oh":1.8},"clicks":[{"p":"/html[@class=mh-desktop-display]/body[@class=productDetail us flexBox objFit isDesktop]/id(pageContent)/div[@class=container]/div[@class=col-tn-12 col-xs-6 col-md-4 buyBox]/fieldset[@class=buyBoxSelect buyBoxSelectColor]/ul[@class=buyBoxColorList]/li[8]/div[@class=swatchBox selectColor]/div[@class=swatch]","cn":"swatch","tm":1616590584.8,"x":1361,"y":623},{"p":"/html[@class=mh-desktop-display]/body[@class=productDetail us flexBox objFit isDesktop]/id(pageContent)/div[@class=container]/div[@class=col-tn-12 col-xs-6 col-md-4 buyBox]/fieldset[@class=buyBoxSelect buyBoxSelectSize]/ul[@class=buyBoxSizeList]/li[2]/div[@class=swatchBox selectSize]","cn":"swatchBox selectSize","tm":1616590585.5,"x":1276,"y":720}]},"mh":{"R5x12":{"d":15.5,"t":0.3,"s":155.2,"a":11.5,"c":0},"R6x12":{"d":17.9,"t":0.5,"s":40,"a":-9.9,"c":1},"R4x14":{"d":117.4,"t":0.1,"s":160,"a":-85.4,"c":1}},"site_state_data":{"cp_product_id":"A350617","cp_price":57.58,"cp_regular_price":120,"cp_savings":62.42,"cp_image":"https://qvc.scene7.com/is/image/QVC/a/17/a350617.001","cp_title":"Barefoot Dreams CozyChic Ultra Lite Pullover Hoodie","cp_ratings":3.6,"cp_number_of_reviews":155,"cp_in_stock":0,"cp_category":"PRODFEED","cp_sub_category":"LTS","cp_easypay_highest_available_division":3,"cp_easypay_first_payment":19.19,"cp_free_shipping":false,"cp_merchant_category_code":"H590","cp_video_xmpeg":"//vdqvcus.akamaized.net/6169211258001.m3u8","current_product_id":"A350617"},"site_state_data_modifier":null,"widget_state_data":{"yfBgy7edVpgmzEmM":{"open-state":"opened"}},"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","callback":null,"wish_list_contents":null,"start_time":1616590582857.0,"category":null,"subcategory":null,"visit_duration":"2.7","current_time":1616590585550.0,"mouse_stats":{"selections":null,"over":{"links":1,"images":null,"text":1,"buttons":null,"other":14},"click":{"links":null,"images":null,"text":null,"buttons":null,"other":2},"time":{"links":0.1,"images":null,"text":null,"buttons":null,"other":1.8},"clicks":[{"widget_part":null},{"widget_part":null}]},"mouse_heatmap":{"R5x12":{"d":15.5,"t":0.3,"s":155.2,"a":11.5,"c":0},"R6x12":{"d":17.9,"t":0.5,"s":40,"a":-9.9,"c":1},"R4x14":{"d":117.4,"t":0.1,"s":160,"a":-85.4,"c":1}},"mouse_distance":"2518.8","scroll_distance":null,"scroll_depth":null,"scroll_top":null,"tab_changes":null,"jsapi":null,"tags":[],"has_unconfirmed_orders":null,"gr_campaign":null,"mt":null,"force_gc":null,"test_request":null,"viewport":{"h":1041,"w":2133},"data":{},"product_id":["A349566","A351133","H221669","H226021","A350617"]},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"50.235.220.146","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_CONNECTION":"close","CONTENT_LENGTH":"1878","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"ANGLE (NVIDIA Quadro P4000 Direct3D11 vs_5_0 ps_5_0)","HTTP_ORIGIN":"https://www.qvc.com","HTTP_REFERER":"https://www.qvc.com/","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_FETCH_DEST":"empty","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_SITE":"cross-site","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","HTTP_X_FORWARDED_FOR":"50.235.220.146","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/match","HTTP_PATH_INFO":"/match","HTTP_REQUEST_URI":"/match","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"50.235.220.146","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"1878","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"ANGLE (NVIDIA Quadro P4000 Direct3D11 vs_5_0 ps_5_0)","HTTP_HTTP_ORIGIN":"https://www.qvc.com","HTTP_HTTP_REFERER":"https://www.qvc.com/","HTTP_HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_HTTP_SEC_FETCH_DEST":"empty","HTTP_HTTP_SEC_FETCH_MODE":"cors","HTTP_HTTP_SEC_FETCH_SITE":"cross-site","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36","HTTP_HTTP_X_FORWARDED_FOR":"50.235.220.146","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"id":"e3f993bc-9583-4b7c-8847-aaa1efdb7da7","s":"-1","sid":"nJpuD","st":"1616590582857","vd":"2.7","ma":"2","x":"231","ssd":"{\"cp_product_id\":\"A350617\",\"cp_price\":57.58,\"cp_regular_price\":120,\"cp_savings\":62.42,\"cp_image\":\"https://qvc.scene7.com/is/image/QVC/a/17/a350617.001\",\"cp_title\":\"Barefoot Dreams CozyChic Ultra Lite Pullover Hoodie\",\"cp_ratings\":3.6,\"cp_number_of_reviews\":155,\"cp_in_stock\":0,\"cp_category\":\"PRODFEED\",\"cp_sub_category\":\"LTS\",\"cp_easypay_highest_available_division\":3,\"cp_easypay_first_payment\":19.19,\"cp_free_shipping\":false,\"cp_merchant_category_code\":\"H590\",\"cp_video_xmpeg\":\"//vdqvcus.akamaized.net/6169211258001.m3u8\",\"current_product_id\":\"A350617\"}","wsd":"{\"yfBgy7edVpgmzEmM\":{\"open-state\":\"opened\"}}","md":"2518.8","mh":"{\"R5x12\":{\"d\":15.5,\"t\":0.3,\"s\":155.2,\"a\":11.5},\"R6x12\":{\"d\":17.9,\"t\":0.5,\"s\":40,\"a\":-9.9,\"c\":1},\"R4x14\":{\"d\":117.4,\"t\":0.1,\"s\":160,\"a\":-85.4,\"c\":1}}","ms":"{\"ov\":{\"tx\":1,\"lk\":1,\"oh\":14},\"cl\":{\"oh\":2},\"tm\":{\"lk\":0.1,\"oh\":1.8},\"clicks\":[{\"p\":\"/html[@class=mh-desktop-display]/body[@class=productDetail us flexBox objFit isDesktop]/id(pageContent)/div[@class=container]/div[@class=col-tn-12 col-xs-6 col-md-4 buyBox]/fieldset[@class=buyBoxSelect buyBoxSelectColor]/ul[@class=buyBoxColorList]/li[8]/div[@class=swatchBox selectColor]/div[@class=swatch]\",\"cn\":\"swatch\",\"tm\":1616590584.8,\"x\":1361,\"y\":623},{\"p\":\"/html[@class=mh-desktop-display]/body[@class=productDetail us flexBox objFit isDesktop]/id(pageContent)/div[@class=container]/div[@class=col-tn-12 col-xs-6 col-md-4 buyBox]/fieldset[@class=buyBoxSelect buyBoxSelectSize]/ul[@class=buyBoxSizeList]/li[2]/div[@class=swatchBox selectSize]\",\"cn\":\"swatchBox selectSize\",\"tm\":1616590585.5,\"x\":1276,\"y\":720}]}","wlf":"1698","wlj":"57","ct":"1616590585550"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324104925","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-00a274f76ade6b30b","stats":{"mem":{"total":15003.76171875,"free":181.0546875,"buffers":2007.1875,"cached":94.1328125,"free_total":2282.375},"load":{"one":4.94,"five":5.09,"fifteen":5.06}},"time":"2021-03-24T12:56:27.493Z","pid":4701}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"ab36699f-8f2d-4bdb-9df4-0aea87a91be6","class":"No matching group specified --user_data.rb:375","message":"No matching group specified","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"42","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"block (2 levels) in singleton class","source":{"40":"        raise('Params found in context slot during AppLog call.  Use AppLog.<level>(nil, <params>) instead.') if Matching.env == :development && context.is_a?(Hash)\n","41":"\n","42":"        self.log(logger_level,\n","43":"                 context.to_s,\n","44":"                 block ? block.call : nil,\n"}},{"number":"375","file":"[PROJECT_ROOT]/models/user_data.rb","method":"initialize_matching_group","source":{"373":"                                raise RequestAborted\n","374":"                              else\n","375":"                                AppLog.error('No matching group specified', site_id: Request.current_site.id,\n","376":"                                                                            path: Request.params[:path].split(/\\?/).first,\n","377":"                                                                            user: user)\n"}},{"number":"227","file":"[PROJECT_ROOT]/models/user_data.rb","method":"build_session_data","source":{"225":"    session_data[:meta_info] = build_session_meta_info(saved_meta)\n","226":"\n","227":"    initialize_matching_group(session_data, saved_meta)\n","228":"    initialize_session_stage(session_data)\n","229":"\n"}},{"number":"311","file":"[PROJECT_ROOT]/models/user_data.rb","method":"new_session","source":{"309":"  # If saved_meta is present it creates a returning user, otherwise it creates a new user.\n","310":"  def self.new_session(uuid, saved_meta)\n","311":"    session_data = build_session_data(uuid, saved_meta)\n","312":"\n","313":"    session = UserData.new(session_data)\n"}},{"number":"41","file":"[PROJECT_ROOT]/models/session_strategy.rb","method":"resolve_session","source":{"39":"      existing_matching_group = [user[\"matching_group\"].to_s] if user && user[\"matching_group\"]\n","40":"      Request.params[:matching_group] ||= existing_matching_group if user && Request.current_site[:site_assigns_groups]\n","41":"      UserData.new_session(uuid, meta)\n","42":"    else\n","43":"      user_data = get_user_data(user)\n"}},{"number":"195","file":"[PROJECT_ROOT]/models/user_data.rb","method":"update_user","source":{"193":"    end\n","194":"\n","195":"    user = session_strategy.resolve_session(uuid, user, meta, USER_DATA_EXPIRATION.seconds.ago)\n","196":"\n","197":"    if predictions_disabled\n"}},{"number":"16","file":"[PROJECT_ROOT]/controllers/base_controller.rb","method":"set_current_user","source":{"14":"    return unless Request.lock_acquired?\n","15":"\n","16":"    user_data = UserData.update_user(params[:uuid], data, meta)\n","17":"\n","18":"    if data && data['broken_session']\n"}},{"number":"40","file":"[PROJECT_ROOT]/controllers/match.rb","method":"initialize","source":{"38":"      Utils.monitor_latency(C::MATCH_PARAMS_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_PARAMS_LOAD, Request.current_child_site.id))\n","39":"\n","40":"      set_current_user(Request.params)\n","41":"      Utils.monitor_latency(C::MATCH_USER_LOAD, Utils.format_monitor_key(C::MATCH_BY_SITE_USER_LOAD, Request.current_child_site.id))\n","42":"\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"new","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"96","file":"[PROJECT_ROOT]/matching.rb","method":"block (3 levels) in <top (required)>","source":{"94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n","97":"        end\n","98":"      when C::CAMPAIGN_RESTRICTION_VALIDATE_PATH\n"}},{"number":"155","file":"[PROJECT_ROOT]/lib/request.rb","method":"validate_params","source":{"153":"      message = \"request malformed or missing parameters\"\n","154":"    ensure\n","155":"      yield if block_given? && !message\n","156":"      message\n","157":"    end\n"}},{"number":"94","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"92":"      case env[C::PATH_INFO]\n","93":"      when C::MATCH_PATH\n","94":"        message = Request.validate_params(params) do\n","95":"          Request.set_monitor_latency\n","96":"          Match.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/match","component":null,"action":null,"params":{"flags":null,"site_id":1480,"child_site_id":1472,"uuid":"a7eb5d24-daad-5378-b0fb-5d91769ac79a","session":"-1","session_id":"a7eb5d24-daad-5378-b0fb-5d91769ac79a:1480:-1","child_session_id":"a7eb5d24-daad-5378-b0fb-5d91769ac79a:1472:-1","matching_group":null,"url":"https://oldnavy.gap.com/","path":"/","ip_address":"64.53.4.0","country":"US","region":"SC","city":"Swansea","http_user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36","entry_page":null,"entry_referrer":null,"entry_page_type":null,"page_type":null,"timezone":null,"unconfirmed_orders":false,"x":231,"disable_predictions":false,"force_matching":null,"reset_session":false,"new_js_session":false,"new_session_ack":false,"referer":"","ga":{},"source":"direct","service":"","query":"","ms":{"ov":{"tx":12,"im":36,"bu":5,"oh":20},"tm":{"tx":64.3,"im":23,"bu":0.1,"oh":10}},"mh":{"R10x475":{"d":92.6,"s":925.7,"a":-279,"t":0,"c":0},"L0x487":{"d":815.7,"s":8157.1,"a":723.1,"t":0,"c":0},"L3x493":{"d":344.3,"t":3.5,"s":3442.8,"a":-471.4,"c":0},"L1x490":{"d":175.9,"s":1758.9,"a":-168.4,"t":0,"c":0},"L4x493":{"d":212.4,"t":0.1,"s":2123.6,"a":36.5,"c":0},"L3x491":{"d":140.9,"t":0.3,"s":138.9,"a":-4.9,"c":0},"L2x493":{"d":96.4,"s":964.2,"a":82.5,"t":0,"c":0}},"site_state_data":null,"site_state_data_modifier":null,"widget_state_data":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36","callback":null,"wish_list_contents":null,"start_time":1616586156435.0,"category":null,"subcategory":null,"visit_duration":"118.3","current_time":1616588554871.0,"mouse_stats":{"selections":null,"over":{"links":null,"images":36,"text":12,"buttons":5,"other":20},"time":{"links":null,"images":23,"text":64.3,"buttons":0.1,"other":10}},"mouse_heatmap":{"R10x475":{"d":92.6,"s":925.7,"a":-279,"t":0,"c":0},"L0x487":{"d":815.7,"s":8157.1,"a":723.1,"t":0,"c":0},"L3x493":{"d":344.3,"t":3.5,"s":3442.8,"a":-471.4,"c":0},"L1x490":{"d":175.9,"s":1758.9,"a":-168.4,"t":0,"c":0},"L4x493":{"d":212.4,"t":0.1,"s":2123.6,"a":36.5,"c":0},"L3x491":{"d":140.9,"t":0.3,"s":138.9,"a":-4.9,"c":0},"L2x493":{"d":96.4,"s":964.2,"a":82.5,"t":0,"c":0}},"mouse_distance":"27510.7","scroll_distance":null,"scroll_depth":null,"scroll_top":null,"tab_changes":"4","jsapi":null,"tags":[],"has_unconfirmed_orders":null,"gr_campaign":null,"mt":null,"force_gc":null,"test_request":null,"user":{"uuid":"a7eb5d24-daad-5378-b0fb-5d91769ac79a","_id":"a7eb5d24-daad-5378-b0fb-5d91769ac79a:1480:1616588554","site_id":1480,"user_id":"a7eb5d24-daad-5378-b0fb-5d91769ac79a:1480","sequence_id":1,"session_time":1616588554,"platform":"javascript","keywords":"","ip_address":"64.53.4.0","start_time":"2021-03-24 12:22:34 UTC","end_time":"2021-03-24 12:22:34 UTC","entry_page":"/","entry_page_type":null,"city":"Swansea","country":"US","entry_referrer":null,"ga":{},"referer":"","region":"SC","source":"direct","service":"","timezone":null,"user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36","session_pending":true,"client_session_id":1616588554928,"session_ack_failures":0,"predictions_disabled":true,"predictions_disabled_reason":"pending","traffic_sources":{"ft_source_type":"direct","ft_referral_domain":"","ft_date":"2021-03-24 12:22:34 UTC","lt_source_type":"direct","lt_referral_domain":"","lt_date":"2021-03-24 12:22:34 UTC"},"meta_info":{"new_session":true,"is_new":false,"ifreturn":true,"returned_buyer":false,"has_orders":false}}},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"64.53.4.126","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"SC","HTTP_X_GEOIP_CITY":"Swansea","HTTP_CONNECTION":"close","CONTENT_LENGTH":"660","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","CONTENT_TYPE":"text/plain","HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 630 Direct3D11 vs_5_0 ps_5_0)","HTTP_ORIGIN":"https://oldnavy.gap.com","HTTP_REFERER":"https://oldnavy.gap.com/","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_SEC_FETCH_DEST":"empty","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_SITE":"cross-site","HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36","HTTP_X_FORWARDED_FOR":"64.53.4.126","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/match","HTTP_PATH_INFO":"/match","HTTP_REQUEST_URI":"/match","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"64.53.4.126","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"SC","HTTP_HTTP_X_GEOIP_CITY":"Swansea","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"660","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_HTTP_ACCEPT_LANGUAGE":"en-US,en;q=0.9","HTTP_CONTENT_TYPE":"text/plain","HTTP_HTTP_DEVICE_GPU":"ANGLE (Intel(R) UHD Graphics 630 Direct3D11 vs_5_0 ps_5_0)","HTTP_HTTP_ORIGIN":"https://oldnavy.gap.com","HTTP_HTTP_REFERER":"https://oldnavy.gap.com/","HTTP_HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"89\", \"Chromium\";v=\"89\", \";Not A Brand\";v=\"99\"","HTTP_HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_HTTP_SEC_FETCH_DEST":"empty","HTTP_HTTP_SEC_FETCH_MODE":"cors","HTTP_HTTP_SEC_FETCH_SITE":"cross-site","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36","HTTP_HTTP_X_FORWARDED_FOR":"64.53.4.126","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"id":"a7eb5d24-daad-5378-b0fb-5d91769ac79a","s":"-1","sid":"TgCeU","st":"1616586156435","vd":"118.3","ma":"59.5","x":"231","csid":"m6B40","md":"27510.7","mh":"{\"R10x475\":{\"d\":92.6,\"s\":925.7,\"a\":-279},\"L0x487\":{\"d\":815.7,\"s\":8157.1,\"a\":723.1},\"L3x493\":{\"d\":344.3,\"t\":3.5,\"s\":3442.8,\"a\":-471.4},\"L1x490\":{\"d\":175.9,\"s\":1758.9,\"a\":-168.4},\"L4x493\":{\"d\":212.4,\"t\":0.1,\"s\":2123.6,\"a\":36.5},\"L3x491\":{\"d\":140.9,\"t\":0.3,\"s\":138.9,\"a\":-4.9},\"L2x493\":{\"d\":96.4,\"s\":964.2,\"a\":82.5}}","ms":"{\"ov\":{\"tx\":12,\"im\":36,\"bu\":5,\"oh\":20},\"tm\":{\"tx\":64.3,\"im\":23,\"bu\":0.1,\"oh\":10}}","tc":"4","ct":"1616588554871"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324104909","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-079671180869cf6c6","stats":{"mem":{"total":15003.76171875,"free":459.703125,"buffers":2556.11328125,"cached":103.3984375,"free_total":3119.21484375},"load":{"one":5.05,"five":5.06,"fifteen":4.9}},"time":"2021-03-24T12:22:34.929Z","pid":4694}}
{"api_key":"63eb3f46","notifier":{"name":"honeybadger-ruby","url":"https://github.com/honeybadger-io/honeybadger-ruby","version":"4.5.2","language":"ruby"},"breadcrumbs":{"enabled":false,"trail":[]},"error":{"token":"a8bba611-083b-4f3b-951f-6b1b2bcb6e00","class":"User data lock error --redis_helper.rb:58","message":"User data lock error","backtrace":[{"number":"26","file":"[GEM_ROOT]/gems/statsd-instrument-1.7.2/lib/statsd/instrument.rb","method":"block (2 levels) in statsd_count_success","source":{"24":"        define_method(new_method) do |*args, &block|\n","25":"          begin\n","26":"            truthiness = result = send(old_method, *args, &block)\n","27":"          rescue\n","28":"            truthiness = false\n"}},{"number":"75","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"log","source":{"73":"      }\n","74":"\n","75":"      exception ? Honeybadger.notify(exception, hb_params) : Honeybadger.notify(hb_params)\n","76":"    end\n","77":"\n"}},{"number":"42","file":"[PROJECT_ROOT]/lib/app_log.rb","method":"block (2 levels) in singleton class","source":{"40":"        raise('Params found in context slot during AppLog call.  Use AppLog.<level>(nil, <params>) instead.') if Matching.env == :development && context.is_a?(Hash)\n","41":"\n","42":"        self.log(logger_level,\n","43":"                 context.to_s,\n","44":"                 block ? block.call : nil,\n"}},{"number":"58","file":"[PROJECT_ROOT]/lib/redis_helpers/redis_helper.rb","method":"user_data","source":{"56":"        [Utils.deserialize(pkt.data), Utils.deserialize(pkt.meta), pkt.order_ids, pkt.meta_expiration]\n","57":"      else\n","58":"        AppLog.error(\n","59":"          'User data lock error',\n","60":"          retries: MUTEX_RETRIES,\n"}},{"number":"159","file":"[PROJECT_ROOT]/models/user_data.rb","method":"find_by_uuid","source":{"157":"  def self.find_by_uuid(uuid, orders = false)\n","158":"    user_id = SessionIdBuilder.build_user_id(uuid, Request.current_site.id)\n","159":"    RedisHelper.user_data(user_id, orders)\n","160":"  end\n","161":"\n"}},{"number":"47","file":"[PROJECT_ROOT]/controllers/metric_handler.rb","method":"initialize_user","source":{"45":"    # TODO: call base.set_current_user(), however set_current_user() will need to be changed first\n","46":"    # so that updating the session is refactored out\n","47":"    user_data, _meta = UserData.find_by_uuid(Request.params[:uuid], false)\n","48":"    AppLog.debug(\"Metrics Handler\") {\"User Data: #{user_data}\"}\n","49":"\n"}},{"number":"56","file":"[PROJECT_ROOT]/controllers/metric_handler.rb","method":"log_session_metrics","source":{"54":"\n","55":"  def log_session_metrics(metrics)\n","56":"    initialize_user\n","57":"\n","58":"    metrics.each do |metric|\n"}},{"number":"24","file":"[PROJECT_ROOT]/controllers/metric_handler.rb","method":"response","source":{"22":"\n","23":"    # We log session metrics seperately because we need get site and user data first\n","24":"    log_session_metrics(metrics) if has_session_metrics?(metrics)\n","25":"\n","26":"    C::RESPONSE_OK\n"}},{"number":"129","file":"[PROJECT_ROOT]/matching.rb","method":"block (2 levels) in <top (required)>","source":{"127":"        SiteEvents.new(env, params).response\n","128":"      when C::METRIC_PATH\n","129":"        MetricHandler.new(env, params).response\n","130":"      when dev_tools_enabled? && C::DEV_TOOLS_SETTINGS_PATH\n","131":"        DevToolsSettings.new(env, params).response\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"20","file":"[PROJECT_ROOT]/middleware/utf8_cleaner.rb","method":"call","source":{"18":"\n","19":"    def call(env)\n","20":"      @app.call(sanitize_env(env))\n","21":"    end\n","22":"\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"76","file":"[PROJECT_ROOT]/matching_base.rb","method":"call","source":{"74":"        end\n","75":"\n","76":"        status, headers, body = @app.call(env)\n","77":"\n","78":"        if self.respond_to?(:post_process)\n"}},{"number":"21","file":"[PROJECT_ROOT]/middleware/jsonp.rb","method":"call","source":{"19":"      request = Rack::Request.new(env)\n","20":"\n","21":"      status, headers, response = @app.call(env)\n","22":"\n","23":"      headers = HeaderHash.new(headers)\n"}},{"number":"38","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/common_logger.rb","method":"call","source":{"36":"    def call(env)\n","37":"      began_at = Utils.clock_time\n","38":"      status, headers, body = @app.call(env)\n","39":"      headers = Utils::HeaderHash[headers]\n","40":"      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n"}},{"number":"19","file":"[GEM_ROOT]/gems/request_store-1.4.1/lib/request_store/middleware.rb","method":"call","source":{"17":"      RequestStore.begin!\n","18":"\n","19":"      response = @app.call(env)\n","20":"\n","21":"      returned = response << Rack::BodyProxy.new(response.pop) do\n"}},{"number":"244","file":"[GEM_ROOT]/gems/rack-2.2.3/lib/rack/builder.rb","method":"call","source":{"242":"    # every time it is called, so it should not be used if performance is important.\n","243":"    def call(env)\n","244":"      to_app.call(env)\n","245":"    end\n","246":"\n"}},{"number":"95","file":"[GEM_ROOT]/gems/rack-cors-1.0.3/lib/rack/cors.rb","method":"call","source":{"93":"      vary_resource = resource_for_path(env[PATH_INFO])\n","94":"\n","95":"      status, headers, body = @app.call env\n","96":"\n","97":"      if add_headers\n"}},{"number":"605","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"process_client","source":{"603":"  # in 3 easy steps: read request, call app, write app response\n","604":"  def process_client(client)\n","605":"    status, headers, body = @app.call(env = @request.read(client))\n","606":"\n","607":"    begin\n"}},{"number":"700","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"worker_loop","source":{"698":"        # but that will return false\n","699":"        if client = sock.kgio_tryaccept\n","700":"          process_client(client)\n","701":"          nr += 1\n","702":"          worker.tick = time_now.to_i\n"}},{"number":"548","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"spawn_missing_workers","source":{"546":"      unless pid\n","547":"        after_fork_internal\n","548":"        worker_loop(worker)\n","549":"        exit\n","550":"      end\n"}},{"number":"144","file":"[GEM_ROOT]/gems/unicorn-5.5.1/lib/unicorn/http_server.rb","method":"start","source":{"142":"    bind_new_listeners!\n","143":"\n","144":"    spawn_missing_workers\n","145":"    self\n","146":"  end\n"}},{"number":"128","file":"[GEM_ROOT]/gems/unicorn-5.5.1/bin/unicorn","method":"<top (required)>","source":{"126":"\n","127":"Unicorn::Launcher.daemonize!(options) if rackup_opts[:daemonize]\n","128":"Unicorn::HttpServer.new(app, options).start.join\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"load","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}},{"number":"23","file":"[GEM_ROOT]/bin/unicorn","method":"<main>","source":{"21":"\n","22":"if Gem.respond_to?(:activate_bin_path)\n","23":"load Gem.activate_bin_path('unicorn', 'unicorn', version)\n","24":"else\n","25":"gem \"unicorn\", version\n"}}],"fingerprint":null,"tags":[],"causes":[]},"details":{},"request":{"url":"https://matching.granify.com/metric","component":null,"action":null,"params":{"mt":{"c":{},"co":{"js.{site_id}.campaign.6983.matchingRequestsMessageDisplay":1}},"sid":1453,"csid":null,"uuid":"ce6e48c1-7783-4e44-9bee-52bec0948fad:1453","retries":5},"session":{},"cgi_data":{"REMOTE_ADDR":"127.0.0.1","REQUEST_METHOD":"POST","SERVER_PROTOCOL":"HTTP/1.0","HTTP_VERSION":"HTTP/1.0","HTTP_HOST":"matching.granify.com","HTTP_X_REAL_IP":"24.115.143.79","HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_X_GEOIP_REGION_NAME":"PA","HTTP_X_GEOIP_CITY":"Stroudsburg","HTTP_CONNECTION":"close","CONTENT_LENGTH":"156","HTTP_ACCEPT":"*/*","HTTP_ACCEPT_ENCODING":"br, gzip, deflate","HTTP_ACCEPT_LANGUAGE":"en-us","HTTP_CACHE_CONTROL":"max-age=0","CONTENT_TYPE":"application/json","HTTP_ORIGIN":"https://www.etsy.com","HTTP_REFERER":"https://www.etsy.com/","HTTP_USER_AGENT":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Safari/605.1.15","HTTP_X_FORWARDED_FOR":"24.115.143.79","HTTP_X_FORWARDED_PORT":"443","HTTP_X_FORWARDED_PROTO":"https","SERVER_NAME":"matching.granify.com","SERVER_PORT":"443","SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_REMOTE_ADDR":"127.0.0.1","HTTP_REQUEST_METHOD":"POST","HTTP_REQUEST_PATH":"/metric","HTTP_PATH_INFO":"/metric","HTTP_REQUEST_URI":"/metric","HTTP_SERVER_PROTOCOL":"HTTP/1.0","HTTP_HTTP_VERSION":"HTTP/1.0","HTTP_HTTP_HOST":"matching.granify.com","HTTP_HTTP_X_REAL_IP":"24.115.143.79","HTTP_HTTP_X_GEOIP_COUNTRY_CODE":"US","HTTP_HTTP_X_GEOIP_REGION_NAME":"PA","HTTP_HTTP_X_GEOIP_CITY":"Stroudsburg","HTTP_HTTP_CONNECTION":"close","HTTP_CONTENT_LENGTH":"156","HTTP_HTTP_ACCEPT":"*/*","HTTP_HTTP_ACCEPT_ENCODING":"br, gzip, deflate","HTTP_HTTP_ACCEPT_LANGUAGE":"en-us","HTTP_HTTP_CACHE_CONTROL":"max-age=0","HTTP_CONTENT_TYPE":"application/json","HTTP_HTTP_ORIGIN":"https://www.etsy.com","HTTP_HTTP_REFERER":"https://www.etsy.com/","HTTP_HTTP_USER_AGENT":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Safari/605.1.15","HTTP_HTTP_X_FORWARDED_FOR":"24.115.143.79","HTTP_HTTP_X_FORWARDED_PORT":"443","HTTP_HTTP_X_FORWARDED_PROTO":"https","HTTP_RACK.URL_SCHEME":"https","HTTP_SERVER_NAME":"matching.granify.com","HTTP_SERVER_PORT":"443","HTTP_QUERY_STRING":"","HTTP_RACK.INPUT":"#<Unicorn::TeeInput>","HTTP_UNICORN.SOCKET":"#<Kgio::Socket>","HTTP_RACK.HIJACK":"#<Unicorn::HttpParser>","HTTP_RACK.ERRORS":"#<File>","HTTP_RACK.MULTIPROCESS":true,"HTTP_RACK.MULTITHREAD":false,"HTTP_RACK.RUN_ONCE":false,"HTTP_RACK.VERSION":[1,2],"HTTP_RACK.HIJACK?":true,"HTTP_SCRIPT_NAME":"","HTTP_SERVER_SOFTWARE":"Unicorn 5.5.1","HTTP_RACK.LOGGER":"#<Logger>","HTTP_RACK.CORS":"#<Rack::Cors::Result>","HTTP_HONEYBADGER.CONFIG":"#<Honeybadger::Config>","HTTP_RACK.REQUEST.FORM_HASH":{"mt":{"c":{},"co":{"js.{site_id}.campaign.6983.matchingRequestsMessageDisplay":1}},"sid":"qivBM","csid":null,"uuid":"ce6e48c1-7783-4e44-9bee-52bec0948fad"},"HTTP_RACK.REQUEST.FORM_INPUT":"#<Unicorn::TeeInput>"},"context":{}},"server":{"project_root":"/opt/matching/releases/20210324123842","revision":"ad28f60eb0f4c8945afb0c4931b5f39791c98f2d","environment_name":"production","hostname":"matching-i-004e743b1dcc769d7","stats":{"mem":{"total":15003.76171875,"free":3956.76953125,"buffers":5957.09375,"cached":79.0703125,"free_total":9992.93359375},"load":{"one":3.96,"five":4.59,"fifteen":3.33}},"time":"2021-03-24T12:55:29.033Z","pid":4746}}
